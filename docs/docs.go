// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Luiz Marinho Support",
            "url": "https://luizmarinhodev.vercel.app/",
            "email": "luizmarinhodev@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/broker": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Cria um novo broker com os dados fornecidos. Requer autenticação.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brokers"
                ],
                "summary": "Criar um novo broker",
                "parameters": [
                    {
                        "description": "Broker a ser criado",
                        "name": "broker",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Broker"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID do broker criado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Erro de validação",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/broker/id": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retorna um broker específico pelo ID. Requer autenticação.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brokers"
                ],
                "summary": "Obter broker pelo ID",
                "parameters": [
                    {
                        "description": "ID do broker",
                        "name": "broker",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BrokerId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Broker encontrado",
                        "schema": {
                            "$ref": "#/definitions/response.Broker"
                        }
                    },
                    "400": {
                        "description": "Erro de validação",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Broker não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/broker/name": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retorna um broker específico pelo nome. Requer autenticação.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brokers"
                ],
                "summary": "Obter broker pelo nome",
                "parameters": [
                    {
                        "description": "Nome do broker",
                        "name": "broker",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BrokerName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Broker encontrado",
                        "schema": {
                            "$ref": "#/definitions/response.Broker"
                        }
                    },
                    "400": {
                        "description": "Erro de validação",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Broker não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/brokers": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retorna a lista de todos os brokers. Requer autenticação.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brokers"
                ],
                "summary": "Obter todos os brokers",
                "responses": {
                    "200": {
                        "description": "Lista de brokers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.Broker"
                            }
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Autentica um usuário e define o cookie de sessão com o token JWT.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Login do usuário",
                "parameters": [
                    {
                        "description": "Credenciais do usuário",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login bem-sucedido",
                        "schema": {
                            "$ref": "#/definitions/response.UserName"
                        }
                    },
                    "400": {
                        "description": "Erro de validação",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove o cookie de sessão para efetuar o logout. Requer autenticação.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Logout do usuário",
                "responses": {
                    "200": {
                        "description": "Logout bem-sucedido",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/metric": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Cria uma nova métrica com os dados fornecidos. Requer autenticação.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Criar uma nova métrica",
                "parameters": [
                    {
                        "description": "Métrica a ser criada",
                        "name": "metric",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Metric"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID da métrica criada",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Erro de validação",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/metric/id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retorna uma métrica específica pelo ID. Requer autenticação.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Obter métrica pelo ID",
                "parameters": [
                    {
                        "description": "ID da métrica",
                        "name": "metric",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.MetricId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Métrica encontrada",
                        "schema": {
                            "$ref": "#/definitions/response.Metric"
                        }
                    },
                    "400": {
                        "description": "Erro de validação",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Métrica não encontrada",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "description": "Retorna a lista de todas as métricas.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Obter todas as métricas",
                "responses": {
                    "200": {
                        "description": "Lista de métricas",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.Metric"
                            }
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Cria um novo usuário com os dados fornecidos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Criar um novo usuário",
                "parameters": [
                    {
                        "description": "Usuário a ser criado",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID do usuário criado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Erro de validação",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/validate-token": {
            "get": {
                "description": "Valida o token JWT contido no cookie.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Validar token de autenticação",
                "responses": {
                    "200": {
                        "description": "Token válido",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.Broker": {
            "type": "object",
            "required": [
                "nome",
                "user_id"
            ],
            "properties": {
                "nome": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "request.BrokerId": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "request.BrokerName": {
            "type": "object",
            "required": [
                "nome"
            ],
            "properties": {
                "nome": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                }
            }
        },
        "request.Metric": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "agendamentos": {
                    "type": "integer",
                    "maximum": 2000
                },
                "captacoes": {
                    "type": "integer",
                    "maximum": 2000
                },
                "data": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 3
                },
                "espontaneo": {
                    "type": "integer",
                    "maximum": 2000
                },
                "leads_recebidos": {
                    "type": "integer",
                    "maximum": 2000
                },
                "ligacoes": {
                    "type": "integer",
                    "maximum": 2000
                },
                "negociacoes": {
                    "type": "integer",
                    "maximum": 2000
                },
                "propostas": {
                    "type": "integer",
                    "maximum": 2000
                },
                "vendas": {
                    "type": "integer",
                    "maximum": 2000
                },
                "visitas": {
                    "type": "integer",
                    "maximum": 2000
                }
            }
        },
        "request.MetricId": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "request.User": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 8
                }
            }
        },
        "response.Broker": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.Metric": {
            "type": "object",
            "properties": {
                "agendamentos": {
                    "type": "integer"
                },
                "captacoes": {
                    "type": "integer"
                },
                "corretor": {
                    "$ref": "#/definitions/response.Broker"
                },
                "created_at": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "espontaneo": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "leads_recebidos": {
                    "type": "integer"
                },
                "ligacoes": {
                    "type": "integer"
                },
                "negociacoes": {
                    "type": "integer"
                },
                "propostas": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "vendas": {
                    "type": "integer"
                },
                "visitas": {
                    "type": "integer"
                }
            }
        },
        "response.UserName": {
            "type": "object",
            "properties": {
                "corretor": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "token",
            "in": "cookie"
        }
    },
    "externalDocs": {
        "url": "https://github.com/luizmarinhojr/metrics-back"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Metrics API",
	Description:      "Esta é uma API de métricas para a aplicação Metrics. A chave da API é armazenada através de cookie, portanto, para conseguir a chave da API basta que faça o login no endpoint \"login\".",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
