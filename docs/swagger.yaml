basePath: /api/v1
definitions:
  request.Broker:
    properties:
      nome:
        maxLength: 50
        minLength: 2
        type: string
      user_id:
        type: integer
    required:
    - nome
    - user_id
    type: object
  request.BrokerId:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  request.BrokerName:
    properties:
      nome:
        maxLength: 50
        minLength: 2
        type: string
    required:
    - nome
    type: object
  request.Metric:
    properties:
      agendamentos:
        maximum: 2000
        type: integer
      captacoes:
        maximum: 2000
        type: integer
      data:
        maxLength: 15
        minLength: 3
        type: string
      espontaneo:
        maximum: 2000
        type: integer
      leads_recebidos:
        maximum: 2000
        type: integer
      ligacoes:
        maximum: 2000
        type: integer
      negociacoes:
        maximum: 2000
        type: integer
      propostas:
        maximum: 2000
        type: integer
      vendas:
        maximum: 2000
        type: integer
      visitas:
        maximum: 2000
        type: integer
    required:
    - data
    type: object
  request.MetricId:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  request.User:
    properties:
      email:
        type: string
      password:
        maxLength: 40
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  response.Broker:
    properties:
      created_at:
        type: string
      id:
        type: integer
      nome:
        type: string
      updated_at:
        type: string
    type: object
  response.Metric:
    properties:
      agendamentos:
        type: integer
      captacoes:
        type: integer
      corretor:
        $ref: '#/definitions/response.Broker'
      created_at:
        type: string
      data:
        type: string
      espontaneo:
        type: integer
      id:
        type: integer
      leads_recebidos:
        type: integer
      ligacoes:
        type: integer
      negociacoes:
        type: integer
      propostas:
        type: integer
      updated_at:
        type: string
      vendas:
        type: integer
      visitas:
        type: integer
    type: object
  response.UserName:
    properties:
      corretor:
        type: string
    type: object
externalDocs:
  url: https://github.com/luizmarinhojr/metrics-back
info:
  contact:
    email: luizmarinhodev@gmail.com
    name: Luiz Marinho Support
    url: https://luizmarinhodev.vercel.app/
  description: Esta é uma API de métricas para a aplicação Metrics. A chave da API
    é armazenada através de cookie, portanto, para conseguir a chave da API basta
    que faça o login no endpoint "login".
  title: Metrics API
  version: "1.0"
paths:
  /broker:
    post:
      consumes:
      - application/json
      description: Cria um novo broker com os dados fornecidos. Requer autenticação.
      parameters:
      - description: Broker a ser criado
        in: body
        name: broker
        required: true
        schema:
          $ref: '#/definitions/request.Broker'
      produces:
      - application/json
      responses:
        "201":
          description: ID do broker criado
          schema:
            type: string
        "400":
          description: Erro de validação
          schema:
            type: string
        "401":
          description: Não autorizado
          schema:
            type: string
        "500":
          description: Erro interno do servidor
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Criar um novo broker
      tags:
      - brokers
  /broker/id:
    post:
      consumes:
      - application/json
      description: Retorna um broker específico pelo ID. Requer autenticação.
      parameters:
      - description: ID do broker
        in: body
        name: broker
        required: true
        schema:
          $ref: '#/definitions/request.BrokerId'
      produces:
      - application/json
      responses:
        "200":
          description: Broker encontrado
          schema:
            $ref: '#/definitions/response.Broker'
        "400":
          description: Erro de validação
          schema:
            type: string
        "401":
          description: Não autorizado
          schema:
            type: string
        "404":
          description: Broker não encontrado
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Obter broker pelo ID
      tags:
      - brokers
  /broker/name:
    post:
      consumes:
      - application/json
      description: Retorna um broker específico pelo nome. Requer autenticação.
      parameters:
      - description: Nome do broker
        in: body
        name: broker
        required: true
        schema:
          $ref: '#/definitions/request.BrokerName'
      produces:
      - application/json
      responses:
        "200":
          description: Broker encontrado
          schema:
            $ref: '#/definitions/response.Broker'
        "400":
          description: Erro de validação
          schema:
            type: string
        "401":
          description: Não autorizado
          schema:
            type: string
        "404":
          description: Broker não encontrado
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Obter broker pelo nome
      tags:
      - brokers
  /brokers:
    get:
      consumes:
      - application/json
      description: Retorna a lista de todos os brokers. Requer autenticação.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de brokers
          schema:
            items:
              $ref: '#/definitions/response.Broker'
            type: array
        "401":
          description: Não autorizado
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Obter todos os brokers
      tags:
      - brokers
  /login:
    post:
      consumes:
      - application/json
      description: Autentica um usuário e define o cookie de sessão com o token JWT.
      parameters:
      - description: Credenciais do usuário
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.User'
      produces:
      - application/json
      responses:
        "200":
          description: Login bem-sucedido
          schema:
            $ref: '#/definitions/response.UserName'
        "400":
          description: Erro de validação
          schema:
            type: string
        "401":
          description: Não autorizado
          schema:
            type: string
      summary: Login do usuário
      tags:
      - users
  /logout:
    get:
      consumes:
      - application/json
      description: Remove o cookie de sessão para efetuar o logout. Requer autenticação.
      produces:
      - application/json
      responses:
        "200":
          description: Logout bem-sucedido
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Logout do usuário
      tags:
      - users
  /metric:
    post:
      consumes:
      - application/json
      description: Cria uma nova métrica com os dados fornecidos. Requer autenticação.
      parameters:
      - description: Métrica a ser criada
        in: body
        name: metric
        required: true
        schema:
          $ref: '#/definitions/request.Metric'
      produces:
      - application/json
      responses:
        "201":
          description: ID da métrica criada
          schema:
            type: string
        "400":
          description: Erro de validação
          schema:
            type: string
        "401":
          description: Não autorizado
          schema:
            type: string
        "500":
          description: Erro interno do servidor
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Criar uma nova métrica
      tags:
      - metrics
  /metric/id:
    get:
      consumes:
      - application/json
      description: Retorna uma métrica específica pelo ID. Requer autenticação.
      parameters:
      - description: ID da métrica
        in: body
        name: metric
        required: true
        schema:
          $ref: '#/definitions/request.MetricId'
      produces:
      - application/json
      responses:
        "200":
          description: Métrica encontrada
          schema:
            $ref: '#/definitions/response.Metric'
        "400":
          description: Erro de validação
          schema:
            type: string
        "401":
          description: Não autorizado
          schema:
            type: string
        "404":
          description: Métrica não encontrada
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Obter métrica pelo ID
      tags:
      - metrics
  /metrics:
    get:
      consumes:
      - application/json
      description: Retorna a lista de todas as métricas.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de métricas
          schema:
            items:
              $ref: '#/definitions/response.Metric'
            type: array
      summary: Obter todas as métricas
      tags:
      - metrics
  /signup:
    post:
      consumes:
      - application/json
      description: Cria um novo usuário com os dados fornecidos.
      parameters:
      - description: Usuário a ser criado
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.User'
      produces:
      - application/json
      responses:
        "201":
          description: ID do usuário criado
          schema:
            type: string
        "400":
          description: Erro de validação
          schema:
            type: string
        "500":
          description: Erro interno do servidor
          schema:
            type: string
      summary: Criar um novo usuário
      tags:
      - users
  /validate-token:
    get:
      consumes:
      - application/json
      description: Valida o token JWT contido no cookie.
      produces:
      - application/json
      responses:
        "200":
          description: Token válido
          schema:
            type: string
      summary: Validar token de autenticação
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: cookie
    name: token
    type: apiKey
swagger: "2.0"
